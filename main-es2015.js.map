{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/candidate-info/candidate-info.component.ts","./src/app/components/candidate-info/candidate-info.component.html","./src/app/components/choose-role/choose-role.component.ts","./src/app/components/choose-role/choose-role.component.html","./src/app/components/google-places/google-places.component.ts","./src/app/components/google-places/google-places.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/job-details/job-details.component.ts","./src/app/components/job-details/job-details.component.html","./src/app/components/job-edit/job-edit.component.ts","./src/app/components/job-edit/job-edit.component.html","./src/app/components/job-summary/job-summary.component.ts","./src/app/components/job-summary/job-summary.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/sidebar/sidebar.component.ts","./src/app/components/sidebar/sidebar.component.html","./src/app/components/signin/signin.component.ts","./src/app/components/signin/signin.component.html","./src/app/components/signup/signup.component.ts","./src/app/components/signup/signup.component.html","./src/app/components/topnav/topNavigation.component.ts","./src/app/services/data.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {JobDetailsComponent} from './components/job-details/job-details.component';\nimport {HomeComponent} from './components/home/home.component';\nimport {ProfileComponent} from './components/profile/profile.component';\nimport {JobEditComponent} from './components/job-edit/job-edit.component';\n\nconst routes: Routes = [\n  {path: 'jobs', component: HomeComponent},\n  {path: 'jobs/:id', component: JobDetailsComponent},\n  {path: 'jobs/:id/edit', component: JobEditComponent},\n  {path: 'profile', component: ProfileComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {SignupComponent} from './components/signup/signup.component';\nimport {SigninComponent} from './components/signin/signin.component';\nimport {DataService} from './services/data.service';\nimport {Router} from '@angular/router';\nimport {ToastrService} from 'ngx-toastr';\nimport {Token} from './models/Signup.interface';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  @ViewChild('signup') public signup: SignupComponent;\n  @ViewChild('signin') public signin: SigninComponent;\n\n  constructor(private dataService: DataService, private router: Router, private toastr: ToastrService) {}\n\n  public inAction = false;\n  public title = 'GreatJob';\n\n  public openLogin = (email) => {\n    this.signin.show(email);\n  };\n\n  private navigateToHome() {\n    this.inAction = true;\n\n    this\n    .router\n    .navigate(['/jobs'])\n    .catch((err: Error) => {\n      this.toastr.error(err.message, 'Something failed');\n    });\n  }\n\n  public saveSession = (session: Token) => {\n    this.dataService.saveSession(session);\n    this.navigateToHome();\n  };\n\n  public removeToken = () => {\n    this.dataService.reset();\n    this.inAction = false;\n  };\n\n  ngOnInit(): void {\n    if (this.dataService.inSession) {\n      this.navigateToHome();\n    }\n  }\n}\n","<body>\n<div *ngIf=\"!inAction\" class=\"portal\">\n  <div class=\"portal-content\">\n    <img style=\"width: 15vh; margin-bottom: 20px; min-width: 120px;\" src=\"../assets/image/gjobwhite.gif\" alt=\"great-job-logo\">\n    <h1 class=\"text-white\">Welcome to Great Job</h1>\n    <h2 class=\"text-white\">Need work? Need People? Just click and connect</h2>\n    <div class=\"gate\">\n      <div class=\"text-white grid-vertical\">\n        <h3> I want to Hire </h3>\n        <button class=\"btn .btn-lg btn-warning\" (click)=\"signup.show('employer')\">Don't have account?</button>\n        <button class=\"btn .btn-lg btn-success\" (click)=\"signin.show()\">Employer Sign In</button>\n      </div>\n      <div class=\"ls\"></div>\n      <div class=\"text-white grid-vertical\">\n        <h3> I want to Work </h3>\n        <button class=\"btn .btn-lg btn-outline-warning\" (click)=\"signup.show('employee')\">Don't have account?</button>\n        <button class=\"btn .btn-lg btn-outline-success\" (click)=\"signup.show('employee')\">Employee Sign In</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div id=\"main-screen\" *ngIf=\"inAction\">\n  <app-sidebar id=\"sidebar\" (logout)=\"removeToken()\"></app-sidebar>\n  <app-topnav></app-topnav>\n  <router-outlet></router-outlet>\n</div>\n<app-signup #signup (signedUp)=\"openLogin($event)\"></app-signup>\n<app-signin #signin (session)=\"saveSession($event)\"></app-signin>\n</body>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {ModalModule, BsModalRef} from 'ngx-bootstrap/modal';\nimport {TabsModule} from 'ngx-bootstrap/tabs';\nimport {FormsModule} from '@angular/forms';\nimport {ToastrModule} from 'ngx-toastr';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {SignupComponent} from './components/signup/signup.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {SigninComponent} from './components/signin/signin.component';\nimport {HomeComponent} from './components/home/home.component';\nimport {SidebarComponent} from './components/sidebar/sidebar.component';\nimport {TopNavigationComponent} from './components/topnav/topNavigation.component';\nimport {JobSummaryComponent} from './components/job-summary/job-summary.component';\nimport {JobDetailsComponent} from './components/job-details/job-details.component';\nimport {DataService} from './services/data.service';\nimport {CandidateInfoComponent} from './components/candidate-info/candidate-info.component';\nimport {ProfileComponent} from './components/profile/profile.component';\nimport {JobEditComponent} from './components/job-edit/job-edit.component';\nimport {ChooseRoleComponent} from './components/choose-role/choose-role.component';\nimport {GooglePlacesComponent} from './components/google-places/google-places.component';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material/core';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignupComponent,\n    SigninComponent,\n    HomeComponent,\n    SidebarComponent,\n    TopNavigationComponent,\n    JobSummaryComponent,\n    JobDetailsComponent,\n    CandidateInfoComponent,\n    ProfileComponent,\n    JobEditComponent,\n    ChooseRoleComponent,\n    GooglePlacesComponent,\n  ],\n  imports: [\n    MatDatepickerModule,\n    MatNativeDateModule,\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ModalModule.forRoot(),\n    TabsModule.forRoot(),\n    ToastrModule.forRoot({\n      newestOnTop: true,\n      autoDismiss: true,\n      maxOpened: 3,\n    }),\n  ],\n  providers: [BsModalRef, DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {Employee} from '../../models/Job.interface';\n\n@Component({\n  selector: 'app-candidate-info',\n  templateUrl: './candidate-info.component.html',\n  styleUrls: ['./candidate-info.component.scss']\n})\nexport class CandidateInfoComponent {\n  @Input() candidate: Employee;\n  @Input() idx: number;\n  @Input() likable = true;\n  @Output() liked = new EventEmitter<{\n    candidate: Employee;\n    idx: number;\n  }>();\n\n  public like = () => {\n    this.liked.emit({\n      candidate: this.candidate,\n      idx: this.idx,\n    });\n  };\n}\n","<button *ngIf=\"likable\" class=\"float-right bg-transparent\" id=\"likeBtn\" (click)=\"like()\">\n  <i class=\"fa fa-2x fa-heart-o\" id=\"heartIcon\" style=\"color: red; padding: 10px;\"></i>\n</button>\n\n<div class=\"row filled\">\n  <div class=\"row\" *ngIf=\"candidate?.lastName\">\n    <i class=\"icon-inline fa fa-pencil-square\"></i>\n    <div class=\"text-description\">\n      {{candidate?.firstName}} {{candidate?.lastName}}\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"candidate?.payRateFrom\">\n    <i class=\"icon-inline fa fa-gbp\"></i>\n    <div class=\"text-description\">\n      {{candidate?.payRateFrom}}\n    </div>\n  </div>\n  <div class=\"row padding6\" *ngIf=\"candidate?.phoneNumber\">\n    <i class=\"icon-inline fa fa-phone\"></i>\n    <div class=\"text-description special\">\n      {{candidate?.phoneNumber}}\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"candidate?.location\">\n    <i class=\"icon-inline fa fa-globe\"></i>\n    <div class=\"text-description\">\n      {{candidate?.location?.address}}\n    </div>\n  </div>\n  <div class=\"row padding6\" *ngIf=\"candidate?.bio\">\n    <div class=\"text-description special\">\n      {{candidate?.bio}}\n    </div>\n  </div>\n</div>\n","import {Component, OnInit, ViewChild, Output, EventEmitter, Input} from '@angular/core';\nimport {take} from 'rxjs/operators';\nimport {DataService} from '../../services/data.service';\nimport {ToastrService} from 'ngx-toastr';\nimport {get} from 'lodash';\nimport {Router, ChildActivationStart} from '@angular/router';\nimport {Role, Industry} from '../../models/Industry.interface';\nimport {ModalDirective} from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-choose-role',\n  templateUrl: './choose-role.component.html',\n  styleUrls: ['./choose-role.component.scss']\n})\nexport class ChooseRoleComponent implements OnInit {\n  @Output() newRole = new EventEmitter<Role>();\n  @ViewChild('chooseRoleModal') public chooseRoleModal: ModalDirective;\n  @Input() idx: any;\n  public id: string;\n  public refId: string;\n  public headerId: string;\n  public refHeader: string;\n\n  constructor(\n    private toastr: ToastrService,\n    private httpClient: DataService,\n  ) { }\n\n  public loading: boolean;\n  public industries: Industry[] = [];\n  public show = () => {\n    this.chooseRoleModal.show();\n  };\n\n  ngOnInit(): void {\n    this.loading = true;\n    this\n      .httpClient\n      .get('roles?reverse=true')\n      .pipe(take(1))\n      .subscribe((res: Industry[]) => {\n        this.industries = res || [];\n      }, (err) => {\n        this.toastr.error(get(err, 'error.message') || 'Apologize. Something happened ...');\n      })\n      .add(() => {\n        this.loading = false;\n      });\n    this.id = `industry-${this.idx}`;\n    this.refId = `#${this.id}`;\n    this.headerId = `header-${this.id}`;\n    this.refHeader = `#${this.headerId}`;\n  }\n\n  public changeRole(role: Role) {\n    this.newRole.emit(role);\n  }\n\n  public hide = () => {\n    this.chooseRoleModal.hide();\n  };\n}\n","<div bsModal\n     #chooseRoleModal=\"bs-modal\"\n     class=\"modal fade\"\n     tabindex=\"-1\"\n     role=\"dialog\"\n     [config]=\"{backdrop: 'static', keyboard: true}\"\n     aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" id=\"accordion\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title centeredTitle\">Choose Role</h2>\n        <button type=\"button\" class=\"close\" (click)=\"chooseRoleModal.hide()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body mx-3\">\n        <div class=\"accordion\">\n          <div *ngFor=\"let industry of industries; let idx = index\">\n              <div class=\"card z-depth-0 bordered\">\n                <div class=\"card-header\" [id]=\"'ref_industry_' + idx\">\n                  <h5 class=\"mb-0\">\n                    <button class=\"btn btn-link\" type=\"button\" data-toggle=\"collapse\" [attr.data-target]=\"'#industry_' + idx\" aria-expanded=\"true\"\n                    [attr.aria-controls]=\"'#ref_industry_' + idx\">\n                      {{industry.industryName}}\n                    </button>\n                  </h5>\n                </div>\n                <div class=\"collapse\" [id]=\"'industry_' + idx\" [attr.aria-labelledby]=\"'#ref_industry_' + idx\" data-parent=\"#accordion\">\n                  <div class=\"card-body\">\n                    <div class=\"role-row\" *ngFor=\"let role of industry.roles\">\n                      <button (click)=\"changeRole(role)\" class=\"w-100 btn btn-outline-success\">\n                        {{role.roleName}}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n      </div>\n    </div>\n  </div>\n</div>\n","/// <reference types=\"@types/googlemaps\" />\nimport {Component, ViewChild, EventEmitter, Output, OnInit, AfterViewInit, Input} from '@angular/core';\nimport {} from 'googlemaps';\n\n@Component({\n  selector: 'app-google-places',\n  templateUrl: './google-places.component.html',\n  styleUrls: ['../job-edit/job-edit.component.scss']\n})\nexport class GooglePlacesComponent implements OnInit, AfterViewInit {\n  @Input() init: string;\n  @Output() setAddress: EventEmitter<any> = new EventEmitter();\n  @ViewChild('addresstext') addresstext: any;\n\n  autocompleteInput: string;\n\n  ngOnInit(): void {\n    this.autocompleteInput = this.init;\n  }\n\n  ngAfterViewInit() {\n    const autocomplete = new google.maps.places.Autocomplete(this.addresstext.nativeElement,\n      {\n        types: ['geocode']  // 'establishment' / 'address' / 'geocode'\n      });\n\n    google.maps.event.addListener(autocomplete, 'place_changed', () => {\n      const place = autocomplete.getPlace();\n      this.setAddress.emit(place);\n    });\n  }\n}\n","<input class=\"flex-grow-1\" type=\"text\" [(ngModel)]=\"autocompleteInput\" #addresstext\n       style=\"width: 100%; margin-left: 0; padding-left: 20px\">\n","import {Component, OnInit} from '@angular/core';\nimport {take} from 'rxjs/operators';\nimport {DataService} from '../../services/data.service';\nimport {ToastrService} from 'ngx-toastr';\nimport {get} from 'lodash';\nimport {Router} from '@angular/router';\nimport {Job} from '../../models/Job.interface';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  constructor(\n    private toastr: ToastrService,\n    private httpClient: DataService,\n    private router: Router,\n  ) {}\n\n  public loading: boolean;\n  public jobs: Job[] = [];\n\n  ngOnInit(): void {\n    this.loading = true;\n    this\n      .httpClient\n      .get('job/offers')\n      .pipe(take(1))\n      .subscribe((res: any[]) => {\n        this.jobs = res || [];\n      }, (err) => {\n        this.toastr.error(get(err, 'error.message') || 'Apologize. Something happened ...');\n      })\n      .add(() => {\n        this.loading = false;\n      });\n  }\n\n  public edit(job: Job): void {\n    this\n      .router\n      .navigate([`/jobs/${job.jobId}/edit`], {\n        state: job\n      })\n      .catch((err) => {\n        this.toastr.error(get(err, 'error.message') || 'Apologize. Something happened ...');\n      });\n  }\n}\n","<div class=\"container\">\n  <h1 class=\"page-title\">\n    Posted offers\n  </h1>\n  <menu id=\"accordion\" *ngIf=\"!loading\">\n    <div *ngFor=\"let job of jobs; let idx = index\">\n      <div class=\"card\">\n        <div class=\"card-header\" [id]=\"'ref_job_' + idx\">\n          <h5 class=\"mb-0\">\n            <button class=\"btn btn-link col-sm-10\" data-toggle=\"collapse\" [attr.data-target]=\"'#job_' + idx\" aria-expanded=\"true\"\n                    [attr.aria-controls]=\"'#ref_job_' + idx\">\n              {{job.jobTitle}}\n              <span *ngIf=\"job?.accomodation\" class=\"badge badge-pill badge-primary\">Accomodation</span>\n              <span *ngIf=\"job?.bonus\" class=\"badge badge-pill badge-info\">Bonus</span>\n              <span *ngIf=\"job?.active\" class=\"badge badge-pill badge-success\">Open</span>\n            </button>\n            <button class=\"btn float-right btn-warning leftMargined\" (click)=\"edit(job)\">Edit</button>\n            <a [routerLink]=\"'/jobs/' + job.jobId\" class=\"btn float-right btn-primary leftMargined\">Details</a>\n          </h5>\n        </div>\n\n        <div [id]=\"'job_' + idx\" class=\"collapse show\" [attr.aria-labelledby]=\"'#ref_job_' + idx\">\n          <div class=\"card-body\">\n            <app-job-summary [job]=\"job\"></app-job-summary>\n          </div>\n        </div>\n      </div>\n    </div>\n  </menu>\n\n  <div class=\"col text-center\" *ngIf=\"loading\">\n    <span class=\"spinner-border text-white\"></span>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {DataService} from '../../services/data.service';\nimport {take} from 'rxjs/operators';\nimport {get} from 'lodash';\nimport {ToastrService} from 'ngx-toastr';\nimport {Employee, Job, JobDetails} from '../../models/Job.interface';\n\n@Component({\n  selector: 'app-job-details',\n  templateUrl: './job-details.component.html',\n  styleUrls: ['./job-details.component.scss']\n})\nexport class JobDetailsComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute,\n    private httpClient: DataService,\n    private toastr: ToastrService,\n    private router: Router\n  ) {}\n\n  private jobId: string;\n  public job: JobDetails;\n  public loading: boolean;\n\n  private getJob = () => {\n    this.loading = true;\n\n    this\n      .httpClient\n      .get(`job/${this.jobId}/details`)\n      .pipe(take(1))\n      .subscribe((details: JobDetails) => {\n        this.job = details;\n      }, (err) => {\n        this.toastr.error(get(err, 'error.message') || 'Apologize. Something happened ...');\n      })\n      .add(() => {\n        this.loading = false;\n      });\n  };\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.jobId = this.route.snapshot.paramMap.get('id');\n    this.getJob();\n  }\n\n  public edit = (job: Job): void => {\n    this\n      .router\n      .navigate([`/jobs/${job.jobId}/edit`], {\n        state: job\n      })\n      .catch((err) => {\n        this.toastr.error(get(err, 'error.message') || 'Apologize. Something happened ...');\n      });\n  };\n\n  public liked = (origin: 'matched'|'connections', {candidate, idx}) => {\n    // Moving candidate to the new list ahead of time, since liked/ offered screen has no CTA\n    if (origin === 'matched') {\n      this.job.candidates.available.push(...this.job.candidates.matched.splice(idx, 1));\n    } else {\n      this.job.candidates.offered.push(...this.job.candidates.liked.splice(idx, 1));\n    }\n\n    this\n      .httpClient\n      .post(`job/${this.jobId}/offer/${candidate.id}`)\n      .pipe(take(1))\n      .subscribe(() => {\n        this.toastr.success('Liked');\n      }, (err) => {\n        this.toastr.error(get(err, 'error.message') || 'Apologize. Something happened ...');\n        this.getJob();\n      });\n  };\n}\n","<div class=\"container\" *ngIf=\"!loading\">\n  <h2 class=\"row header\">\n    {{job?.jobDetail?.jobTitle}}\n    <span *ngIf=\"job?.jobDetail?.accomodation\" class=\"badge badge-pill badge-primary\">Accomodation</span>\n    <span *ngIf=\"job?.jobDetail?.bonus\" class=\"badge badge-pill badge-info\">Bonus</span>\n    <span *ngIf=\"job?.jobDetail?.active\" class=\"badge badge-pill badge-success\">Open</span>\n\n    <button class=\"btn float-right btn-warning leftMargined\" (click)=\"edit(job?.jobDetail)\">Edit</button>\n  </h2>\n\n  <div id=\"jobInfo\" class=\"row\">\n    <app-job-summary [job]=\"job?.jobDetail\"></app-job-summary>\n  </div>\n\n  <h2 class=\"row header\">\n    Connections\n  </h2>\n\n  <tabset [justified]=\"true\">\n    <tab [heading]=\"'Matched (' + (job?.candidates?.matched?.length || 0) + ')'\" id=\"tab1\">\n      <div *ngFor=\"let employee of job?.candidates?.matched; let idx = index;\" class=\"row candidate\">\n        <app-candidate-info\n          (liked)=\"liked('matched', $event)\"\n          class=\"w-100\"\n          [idx]=\"idx\"\n          [candidate]=\"employee\">\n        </app-candidate-info>\n      </div>\n    </tab>\n    <tab [heading]=\"'Liked (' + (job?.candidates?.available?.length || 0) + ')'\">\n      <div *ngFor=\"let employee of job?.candidates?.available\" class=\"row candidate\">\n        <app-candidate-info\n          class=\"w-100\"\n          [likable]=\"false\"\n          [candidate]=\"employee\">\n        </app-candidate-info>\n      </div>\n    </tab>\n    <tab [heading]=\"'Offered (' + (job?.candidates?.offered?.length || 0) + ')'\">\n      <div *ngFor=\"let employee of job?.candidates?.offered\" class=\"row candidate\">\n        <app-candidate-info\n          class=\"w-100\"\n          [likable]=\"false\"\n          [candidate]=\"employee\">\n        </app-candidate-info>\n      </div>\n    </tab>\n    <tab [heading]=\"'Connections (' + (job?.candidates?.liked?.length || 0) + ')'\">\n      <div *ngFor=\"let employee of job?.candidates?.liked; let idx = index;\" class=\"row candidate\">\n        <app-candidate-info\n          (liked)=\"liked('connections', $event)\"\n          class=\"w-100\"\n          [idx]=\"idx\"\n          [candidate]=\"employee\">\n        </app-candidate-info>\n      </div>\n    </tab>\n  </tabset>\n</div>\n\n<div class=\"container text-center\" *ngIf=\"loading\">\n  <span class=\"spinner-border text-white\"></span>\n</div>\n","import {DataService} from '../../services/data.service';\nimport {ChooseRoleComponent} from '../choose-role/choose-role.component';\nimport {Component, OnInit, ViewChild, Output} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Job} from '../../models/Job.interface';\nimport {Role} from '../../models/Industry.interface';\nimport {ToastrService} from 'ngx-toastr';\nimport {take} from 'rxjs/operators';\nimport {get} from 'lodash';\n\n@Component({\n  selector: 'app-job-edit',\n  templateUrl: './job-edit.component.html',\n  styleUrls: ['./job-edit.component.scss']\n})\nexport class JobEditComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private toastr: ToastrService,\n    private httpClient: DataService,\n  ) {\n    // navigation properties has to be called within constructors\n    this.job = this.router.getCurrentNavigation().extras.state as Job;\n  }\n\n  @ViewChild('chooseRole') public chooseRole: ChooseRoleComponent;\n  public job: Job;\n  public loading: boolean;\n\n  ngOnInit(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n\n    // we save token within data service,\n    // url refresh will kill the service, the call will get a 401\n    // better to reroute to home page\n    if (this.job && this.job.jobId === id) {\n      this.job.roleId = this.job.role.roleId;\n      return;\n    }\n\n    this\n      .router\n      .navigate(['#'])\n      .catch((err) => {\n        this.toastr.error(get(err, 'error.message') || 'Apologize. Something happened ...');\n      });\n  }\n\n  public getRole = (role: Role) => {\n    this.job.role = role;\n    this.job.roleId = role.roleId;\n    this.chooseRole.hide();\n  };\n\n  public updateData = () => {\n    this.loading = true;\n    return this\n      .httpClient\n      .post(`job/edit/${this.job.jobId}`, this.job)\n      .pipe(take(1))\n      .subscribe(() => {\n        this.toastr.success('Job updated');\n        this.httpClient.get('job').pipe(take(1));\n      }, (err) => {\n        this.toastr.error(get(err, 'error.message') || 'Apologize. Something happened ...');\n      })\n      .add(() => {\n        this.loading = false;\n      });\n  };\n\n  getAddress(place) {\n    this.job.workLocation = {\n      address: place.formatted_address,\n      longitude: get(place, 'geometry.location.lng')(),\n      latitude: get(place, 'geometry.location.lat')(),\n    };\n  }\n}\n","<div class=\"container text-center\" *ngIf=\"loading\">\n  <span class=\"spinner-border text-white\"></span>\n</div>\n<div class=\"container\" *ngIf=\"!loading\">\n  <h1 class=\"row page-title\">\n    Edit Job\n  </h1>\n\n  <form class=\"profile-details\" ngNativeValidate (submit)=\"updateData()\">\n    <div class=\"no-flex\">\n      <div class=\"col\">\n        <label for=\"id\">Job Id: </label>\n        <p id=\"id\">{{job.jobId}}</p>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col\">\n        <label for=\"jobTitle\">Job Title: </label>\n        <input class=\"flex-grow-1\" id=\"jobTitle\" name=\"jobTitle\" [(ngModel)]=\"job.jobTitle\"/>\n      </div>\n      <div class=\"col\">\n        <label for=\"contactName\">Contact Name: </label>\n        <input class=\"flex-grow-1\" id=\"contactName\" name=\"contactName\" [(ngModel)]=\"job.contactName\"/>\n      </div>\n      <div class=\"col\">\n        <label for=\"contactNumber\">Contact Number: </label>\n        <input class=\"flex-grow-1\" type=\"tel\" id=\"contactNumber\" name=\"contactNumber\" [(ngModel)]=\"job.contactNumber\"/>\n      </div>\n      <div class=\"col\">\n        <label for=\"contactEmail\">Contact Email: </label>\n        <input class=\"flex-grow-1\" type=\"email\" id=\"contactEmail\" name=\"contactEmail\" [(ngModel)]=\"job.contactEmail\"/>\n      </div>\n      <div class=\"inline w-100\">\n        <div>\n          <label for=\"startDate\">Start Date: </label>\n          <input name=\"startDate\" id=\"startDate\" [matDatepicker]=\"myDatepicker\" [(ngModel)]=\"job.startDate\">\n          <mat-datepicker-toggle [for]=\"myDatepicker\"></mat-datepicker-toggle>\n          <mat-datepicker #myDatepicker></mat-datepicker>\n        </div>\n        <div>\n          <label for=\"payRate\">Pay Rate: </label>\n          <input type=\"number\" min=\"1\" class=\"flex-grow-1\" id=\"payRate\" name=\"payRate\" [(ngModel)]=\"job.payRate\"/>\n        </div>\n      </div>\n      <div class=\"col\">\n        <label for=\"description\">Job Description: </label>\n        <input class=\"flex-grow-1\" id=\"description\" name=\"description\" [(ngModel)]=\"job.description\"/>\n      </div>\n      <div class=\"col\">\n        <label>Location: </label>\n        <app-google-places\n          [init]=\"job?.workLocation?.address\"\n          (setAddress)=\"getAddress($event)\">\n        </app-google-places>\n      </div>\n      <div class=\"col spec\">\n        <div style=\"display: flex;\">\n          <label for=\"role\">Role: </label>\n          <p id=\"role\">\n            {{job.role.roleName}}\n          </p>\n        </div>\n        <button type=\"button\" class=\"btn btn-warning\" (click)=\"chooseRole.show()\">Choose Role</button>\n      </div>\n    </div>\n    <div class=\"row\">\n      <button type=\"submit\" class=\"btn btn-success\">Update Information</button>\n    </div>\n  </form>\n</div>\n\n<app-choose-role (newRole)=\"getRole($event)\" #chooseRole></app-choose-role>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Job} from '../../models/Job.interface';\n\n@Component({\n  selector: 'app-job-summary',\n  templateUrl: './job-summary.component.html',\n  styleUrls: ['./job-summary.component.scss']\n})\nexport class JobSummaryComponent implements OnInit {\n  @Input() job: Job;\n  @Input() idx: any;\n\n  public id: string;\n  public refId: string;\n  public headerId: string;\n  public refHeader: string;\n\n  ngOnInit(): void {\n    this.id = `job-${this.idx}`;\n    this.refId = `#${this.id}`;\n    this.headerId = `header-${this.id}`;\n    this.refHeader = `#${this.headerId}`;\n  }\n}\n","<div id=summary class=\"row filled\">\r\n  <div class=\"row\" *ngIf=\"job?.payRate\">\r\n    <i class=\"icon-inline fa fa-gbp\"></i>\r\n    <div class=\"text-description\">\r\n      {{job?.payRate}}\r\n    </div>\r\n  </div>\r\n  <div class=\"row\" *ngIf=\"job?.contactName\">\r\n    <div class=\"col-sm-4\">\r\n      <i class=\"icon-inline fa fa-address-book\"></i>\r\n      <div class=\"text-description\">{{job.contactName}}</div>\r\n    </div>\r\n    <div class=\"col-sm-4\" *ngIf=\"job?.contactNumber\">\r\n      <i class=\"icon-inline fa fa-phone\"></i>\r\n      <div class=\"text-description\">{{job.contactNumber}}</div>\r\n    </div>\r\n    <div class=\"col-sm-4\" *ngIf=\"job?.contactEmail\">\r\n      <i class=\"icon-inline fa fa-envelope\"></i>\r\n      <div class=\"text-description\">{{job.contactEmail}}</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\" *ngIf=\"job?.role?.roleName\">\r\n    <i class=\"icon-inline fa fa-briefcase\"></i>\r\n    <div class=\"text-description\">\r\n      {{job?.role?.roleName}}\r\n    </div>\r\n  </div>\r\n  <div class=\"row\" *ngIf=\"job?.workLocation?.address\">\r\n    <i class=\"icon-inline fa fa-building\"></i>\r\n    <div class=\"text-description\">\r\n      {{job?.workLocation?.address}}\r\n    </div>\r\n  </div>\r\n  <div class=\"row padding6\" *ngIf=\"job?.description\">\r\n    <div class=\"text-description special\">\r\n      {{job?.description}}\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {EmployerProfile, Profile} from '../../models/Profile.interface';\nimport {Component, OnInit} from '@angular/core';\nimport {DataService} from '../../services/data.service';\nimport {ToastrService} from 'ngx-toastr';\nimport {take} from 'rxjs/operators';\nimport {get} from 'lodash';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n  public loading: boolean;\n  public id: string;\n  public email: string;\n  public profile: EmployerProfile = {};\n\n  constructor(private httpClient: DataService, private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.loading = true;\n\n    this\n      .httpClient\n      .getUserProfile()\n      .pipe(take(1))\n      .subscribe((res: Profile) => {\n        Object.assign(this.profile, res.employerProfile);\n        this.id = res.id;\n        this.email = res.email;\n      }, (err) => {\n        this.toastr.error(get(err, 'error.message') || 'Apologize. Something happened ...');\n      })\n      .add(() => {\n        this.loading = false;\n      });\n  }\n\n  public updateData = () => {\n    this.loading = true;\n\n    return this\n    .httpClient\n    .post('users/employer', this.profile)\n    .pipe(take(1))\n    .subscribe((res: Profile) => {\n      this.toastr.success('Profile updated');\n      this.profile = res.employerProfile || {};\n      this.id = res.id;\n      this.email = res.email;\n    }, (err) => {\n      const status = err.statusText || 'Apologize!';\n      const message = get(err, 'error.message') || get(err, 'error.title') || 'Something happened ...';\n\n      this.toastr.error(message, status);\n    })\n    .add(() => {\n      this.loading = false;\n    });\n  };\n}\n","<div class=\"container\">\n  <h1 class=\"row page-title\">\n    User profile\n  </h1>\n  <div class=\"container text-center\" *ngIf=\"loading\">\n    <span class=\"spinner-border text-white\"></span>\n  </div>\n  <div class=\"profile-details\" *ngIf=\"!loading\">\n    <div class=\"no-flex\">\n      <div class=\"col\">\n        <label for=\"id\">User Id: </label>\n        <p id=\"id\">{{id}}</p>\n      </div>\n      <div class=\"col\">\n        <label for=\"email\">Registered email: </label>\n        <p id=\"email\">{{email}}</p>\n      </div>\n    </div>\n    <form (submit)=\"updateData()\" ngNativeValidate>\n      <div class=\"row\">\n        <div class=\"col input-group\">\n          <label for=\"firstName\">First name: </label>\n          <input required class=\"flex-grow-1\" id=\"firstName\" name=\"firstName\" [(ngModel)]=\"profile.firstName\"/>\n        </div>\n        <div class=\"col input-group\">\n          <label for=\"lastName\">Last name: </label>\n          <input required class=\"flex-grow-1\" id=\"lastName\" name=\"lastName\" [(ngModel)]=\"profile.lastName\"/>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col input-group\">\n          <label for=\"companyName\">Company name: </label>\n          <input required class=\"flex-grow-1\" id=\"companyName\" name=\"companyName\" [(ngModel)]=\"profile.companyName\"/>\n        </div>\n        <div class=\"col input-group\">\n          <label for=\"companyNumber\">Company number: </label>\n          <input\n            required\n            pattern=\"^\\d+$\"\n            title=\"A sequence of numbers\" class=\"flex-grow-1\" id=\"companyNumber\" name=\"companyNumber\"\n            [(ngModel)]=\"profile.companyNumber\"/>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col input-group\">\n          <label for=\"landLine\">Land line: </label>\n          <input type=\"tel\" class=\"flex-grow-1\" id=\"landLine\" name=\"landLine\" [(ngModel)]=\"profile.landline\"/>\n        </div>\n        <div class=\"col input-group\">\n          <label for=\"mobile\">Mobile: </label>\n          <input type=\"tel\" class=\"flex-grow-1\" id=\"mobile\" name=\"mobile\" [(ngModel)]=\"profile.mobile\"/>\n        </div>\n        <div class=\"col input-group\">\n          <label for=\"website\">Website: </label>\n          <input type=\"url\" class=\"flex-grow-1\" id=\"website\" name=\"website\" [(ngModel)]=\"profile.website\"/>\n        </div>\n      </div>\n      <div class=\"row\">\n        <button type=\"submit\" class=\"btn btn-success\">Update Information</button>\n      </div>\n    </form>\n  </div>\n</div>\n","import {Component, AfterViewInit, ElementRef, ViewChild, Output, EventEmitter} from '@angular/core';\nimport {ModalDirective} from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements AfterViewInit {\n  @ViewChild('logoutModal') public logoutModal: ModalDirective;\n  @Output() logout = new EventEmitter();\n\n  constructor(private elementRef: ElementRef) {}\n\n  public ngAfterViewInit() {\n    const menu = this.elementRef.nativeElement.querySelector('.nav--open');\n    const open = this.elementRef.nativeElement.querySelector('.navbar--icon');\n    const close = this.elementRef.nativeElement.querySelector('.nav--open-icon');\n\n    if (open){\n      open.addEventListener('click', () => {\n        menu.classList.toggle('close');\n      });\n    }\n\n    if (close) {\n      close.addEventListener('click', () => {\n        menu.classList.toggle('close');\n      });\n    }\n  }\n\n  public removeToken() {\n    this.logout.emit();\n  }\n}\n","<div class=\"sticky-top\">\n  <input type=\"checkbox\" id=\"toggle\"/>\n  <label for=\"toggle\" class=\"fa fa-bars\"></label>\n  <nav>\n    <menu id=\"sidebar\">\n      <li>\n        <a routerLink=\"/jobs\"><i class=\"icon fa fa-list\"></i>Jobs</a>\n      </li>\n      <li>\n        <a  routerLink=\"/profile\"><i class=\"icon fa fa-user-o\"></i>Profile</a>\n      </li>\n      <li>\n        <button type=\"button\" id=\"signOutBtn\" (click)=\"logoutModal.show()\">\n          <a><i class=\"icon fa fa-sign-out\"></i>Sign Out</a>\n        </button>\n      </li>\n    </menu>\n  </nav>\n</div>\n\n<div bsModal\n     #logoutModal=\"bs-modal\"\n     class=\"modal fade\"\n     tabindex=\"-1\"\n     role=\"dialog\"\n     aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title centeredTitle\">Log out</h2>\n        <button type=\"button\" class=\"close\" (click)=\"logoutModal.hide()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-footer btn-group\">\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"logoutModal.hide()\">Never mind</button>\n        <button type=\"button\" class=\"btn btn-default btn-primary\" (click)=\"removeToken()\">Logout!</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, EventEmitter, Output, ViewChild} from '@angular/core';\nimport {ModalDirective} from 'ngx-bootstrap/modal';\nimport {DataService} from '../../services/data.service';\nimport {ToastrService} from 'ngx-toastr';\nimport {take} from 'rxjs/operators';\nimport {get} from 'lodash';\nimport {Token} from '../../models/Signup.interface';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n})\nexport class SigninComponent {\n  @Output() session = new EventEmitter<Token>();\n  @ViewChild('loginModal') public loginModal: ModalDirective;\n\n  public loading = false;\n  public email: string;\n  public password: string;\n\n  constructor(private toastr: ToastrService, private httpClient: DataService) {}\n\n  public show = (email = '', password = '') => {\n    this.email = email;\n    this.password = password;\n\n    this.loginModal.show();\n  };\n\n  public login = () => {\n    this.loading = true;\n    return this\n      .httpClient\n      .post('users/authenticate', {\n        email: this.email,\n        password: this.password,\n      })\n      .pipe(take(1))\n      .subscribe((session: Token) => {\n        this.session.emit(session);\n        this.loginModal.hide();\n      }, (err) => {\n        this.toastr.error(get(err, 'error.message') || 'Apologize. Something happened ...');\n      })\n      .add(() => {\n        this.loading = false;\n      });\n  };\n}\n","<div bsModal\n     #loginModal=\"bs-modal\"\n     class=\"modal fade\"\n     tabindex=\"-1\"\n     role=\"dialog\"\n     [config]=\"{backdrop: 'static', keyboard: true}\"\n     aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title centeredTitle\">Enter email and password to login the system</h2>\n        <button type=\"button\" class=\"close\" (click)=\"loginModal.hide()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body mx-3\">\n        <form (ngSubmit)=\"login()\" ngNativeValidate>\n          <div class=\"form-group\">\n            <input [(ngModel)]=\"email\" type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"Email\" [value]=\"'Harold52@hotmail.com'\"\n                   required=\"required\">\n          </div>\n          <div class=\"form-group\">\n            <input [(ngModel)]=\"password\" type=\"password\" minlength=\"6\" class=\"form-control\" name=\"password\"\n                   placeholder=\"Password\"\n                   required=\"required\">\n          </div>\n          <div class=\"form-group\">\n            <button type=\"submit\" class=\"btn btn-success btn-lg btn-block height-48\">\n              <span *ngIf=\"loading\" class=\"spinner-border\"></span>\n              <span *ngIf=\"!loading\">Log me in</span>\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, EventEmitter, Output, ViewChild} from '@angular/core';\nimport {ModalDirective} from 'ngx-bootstrap/modal';\nimport {NgForm} from '@angular/forms';\nimport {ToastrService} from 'ngx-toastr';\nimport {get, omit, pickBy, identity} from 'lodash';\nimport {DataService} from '../../services/data.service';\nimport {EmployerForm, SignupPayload} from '../../models/Signup.interface';\nimport {take} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n})\nexport class SignupComponent {\n  @Output() signedUp = new EventEmitter<string>();\n\n  @ViewChild('employerSignupModal') public employerSignupModal: ModalDirective;\n  @ViewChild('employeeSignupModal') public employeeSignupModal: ModalDirective;\n  @ViewChild('employerData') public employerData: NgForm;\n\n  constructor(private toastr: ToastrService, private httpClient: DataService) {}\n\n  public loading = false;\n  public show = (mode: 'employee' | 'employer' = 'employer') => {\n    if (mode === 'employer') {\n      this.employerSignupModal.show();\n    } else {\n      this.employeeSignupModal.show();\n    }\n  };\n\n  public register = () => {\n    this.loading = true;\n\n    // We use ngNativeValidate, only need to compare password here\n    const formValue: EmployerForm = this.employerData.form.value;\n    const {password, password2} = formValue;\n    if (password !== password2) {\n      this.toastr.error('Passwords do not match. Please retype');\n\n      return;\n    }\n\n    const payload: SignupPayload  = {\n      email: formValue.email,\n      password: formValue.password,\n      userType: 'employer',\n      employerProfile: pickBy(omit(formValue, 'email', 'password2', 'password'), identity),\n    };\n\n    return this\n      .httpClient\n      .post('users/signup', payload)\n      .pipe(take(1))\n      .subscribe(() => {\n        this.signedUp.emit(formValue.email);\n        this.employerSignupModal.hide();\n      }, (err) => {\n        this.toastr.error(get(err, 'error.message') || 'Apologize. Something happened ...');\n      })\n      .add(() => {\n        this.loading = false;\n      });\n  };\n}\n","<div bsModal\n     #employerSignupModal=\"bs-modal\"\n     class=\"modal fade\" tabindex=\"-1\"\n     role=\"dialog\"\n     [config]=\"{backdrop: 'static', keyboard: true}\"\n     aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title centeredTitle\">Register as an employer</h2>\n        <button type=\"button\" class=\"close\" (click)=\"employerSignupModal.hide()\">\n          <i class=\"fa fa-times-circle\"></i>\n        </button>\n      </div>\n      <div class=\"modal-body mx-3\">\n        <form (ngSubmit)=\"register()\" #employerData=\"ngForm\" ngNativeValidate>\n          <div class=\"form-group\">\n            <div class=\"row\">\n              <div>\n                <input ngModel type=\"text\" maxlength=\"50\" class=\"form-control\" name=\"firstName\" placeholder=\"First Name\"\n                       required></div>\n              <div>\n                <input ngModel type=\"text\" maxlength=\"50\" class=\"form-control\" name=\"lastName\" placeholder=\"Last Name\"\n                       required=\"required\"></div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <input ngModel type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"Email\" required=\"required\">\n          </div>\n          <div class=\"form-group\">\n            <input ngModel class=\"form-control\" name=\"companyName\" placeholder=\"Company name\" required=\"required\">\n          </div>\n          <div class=\"form-group\">\n            <input\n              ngModel\n              class=\"form-control\"\n              name=\"companyNumber\"\n              placeholder=\"Company number\"\n              pattern=\"^\\d+$\"\n              title=\"A sequence of numbers\"\n              required=\"required\">\n          </div>\n          <div class=\"form-group\">\n            <input ngModel class=\"form-control\" name=\"landline\" placeholder=\"Land-line number\">\n          </div>\n          <div class=\"form-group\">\n            <input ngModel class=\"form-control\" name=\"mobile\" placeholder=\"Mobile number\">\n          </div>\n          <div class=\"form-group\">\n            <input ngModel type=\"url\" class=\"form-control\" name=\"website\" placeholder=\"Company website\">\n          </div>\n          <div class=\"form-group\">\n            <input ngModel type=\"password\" minlength=\"6\" class=\"form-control\" name=\"password\" placeholder=\"Password\" required=\"required\">\n          </div>\n          <div class=\"form-group\">\n            <input ngModel type=\"password\" minlength=\"6\" class=\"form-control\" name=\"password2\" placeholder=\"Confirm Password\"\n                   required=\"required\">\n          </div>\n          <div class=\"form-group padding6\">\n            <label class=\"checkbox-inline\">\n              <input type=\"checkbox\" required=\"required\">\n              I accept the <a href=\"#\">Terms of Use</a> &amp; <a href=\"#\">Privacy Policy</a>\n            </label>\n          </div>\n          <div class=\"form-group\">\n            <button type=\"submit\" class=\"btn btn-success btn-lg btn-block\">\n              <span *ngIf=\"loading\" class=\"spinner-border\"></span>\n              <span *ngIf=\"!loading\">Register Now</span>\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div bsModal #employeeSignupModal=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\"\n     role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-dialog-centered\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title centeredTitle\">Register as a candidate</h4>\n        <button type=\"button\" class=\"close pull-right\" (click)=\"employeeSignupModal.hide()\" aria-label=\"Close\">\n          <i class=\"fa fa-times-circle\"></i>\n        </button>\n      </div>\n      <div class=\"modal-body text-center\">\n        This is not yet supported. Sorry for the inconvience.\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-topnav',\n  templateUrl: './topNavigation.component.html',\n})\nexport class TopNavigationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {Observable} from 'rxjs';\nimport {Token} from '../models/Signup.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private host = environment.host;\n  private token: string;\n  private userId: string;\n\n  constructor(private client: HttpClient) {}\n\n  public post = (route: string, payload: any|null = null, config?): Observable<object> => {\n    return this\n      .client\n      .post(`${this.host}/${route}`, payload, {\n        responseType: 'json',\n        headers: {\n          ...config && config.headers,\n          ...this.token && {\n            authorization: `Bearer ${this.token}`\n          }\n        },\n        ...config,\n      });\n  };\n\n  public get = (route: string, config?): Observable<object> => {\n    return this\n      .client\n      .get(`${this.host}/${route}`, {\n        responseType: 'json',\n        headers: {\n          ...config && config.headers,\n          ...this.token && {\n            authorization: `Bearer ${this.token}`\n          }\n        },\n        ...config,\n      });\n  };\n\n  public getUserProfile(): Observable<object> {\n    return this\n      .client\n      .get(`${this.host}/users/${this.userId}`, {\n        responseType: 'json',\n        headers: {\n          authorization: `Bearer ${this.token}`\n        },\n      });\n  }\n\n  public saveSession(session: Token): void {\n    this.userId = session.id;\n    this.token = session.token;\n  }\n\n  public reset(): void {\n    this.token = undefined;\n    this.userId = undefined;\n  }\n\n  public get inSession(): boolean {\n    return !!this.token;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  host: 'https://farmer-recruitment.azurewebsites.net',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(console.error);\n"],"sourceRoot":"webpack:///"}